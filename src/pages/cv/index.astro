---
import { documentToHtmlString } from '@contentful/rich-text-html-renderer';

import { Icon } from 'astro-icon';

import { Education, Interests, JobExperience, Language, Project, TechnicalSkills } from '@/model';
import { IconMap } from '@lib/style-helper';
import Print from '@components/Print.astro';

import * as CONTENT from '@content';

import './cv.scss';

const contactInfo = [
	{
		icon: IconMap['Email'],
		label: CONTENT.contactInfo.email,
	},
	{
		icon: IconMap['phone'],
		label: CONTENT.contactInfo.phone,
	},
	{
		icon: IconMap['website'],
		label: CONTENT.website,
	},
];

const skillCategories: Map<string, TechnicalSkills[]> = CONTENT.skills.reduce((acc, item: TechnicalSkills) => {
	const keywords = item.keywords?.map((keyword) => keyword.trim()) || [];
	keywords.forEach((keyword) => {
		if (keyword === 'Development') {
			return;
		}
		if (acc.has(keyword)) {
			acc.set(keyword, [...acc.get(keyword), item]);
		} else {
			acc.set(keyword, [item]);
		}
	});
	return acc;
}, new Map());

const skillList = Array.from(skillCategories.entries());
---

<html lang="en" data-theme="light">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link href="https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500&display=swap" rel="stylesheet" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>{CONTENT.name}'s CV</title>
	</head>
	<body>
		<div class="main">
			<div class="sticky top-4 text-end print:hidden">
				<Print />
			</div>
			<div class="a4">
				<div class="header">
					<div class="title">
						<h1>{CONTENT.name}</h1>
						<p>{CONTENT.designation}</p>
					</div>

					<div class="data">
						<p>{CONTENT.location.city}, {CONTENT.location.country}</p>
						{
							contactInfo.map(({ icon, label }) => {
								return (
									<p class="contact">
										{icon && <Icon name={icon} />}
										{label}
									</p>
								);
							})
						}
					</div>
				</div>

				<div class="section">
					<div class="title"><h3>Work Experience</h3></div>
					{
						CONTENT.work.map((job: JobExperience) => {
							return (
								<div class="block">
									<div class="date">
										{job.start} – {job.end || 'present'}
									</div>
									<div class="information">
										<div class="title">
											<span class="font-bold">{job.position}</span>
											<span>{job.company}</span>
											{job.location?.city && <span>{job.location.city}</span>}
											{job.location?.country && <span>{job.location.country}</span>}
										</div>

										<div class="description">
											<Fragment set:html={documentToHtmlString(job.content)} />
										</div>
									</div>
								</div>
							);
						})
					}
				</div>
				<div class="section">
					<div class="title"><h3>Education</h3></div>
					{
						CONTENT.education.map((edu: Education) => {
							return (
								<div class="block">
									<div class="date">
										{edu.start && `${edu.start} –`} {edu.end}
									</div>
									<div class="information">
										<div class="title">
											<span class="font-bold">{edu.degree}</span>
											<span class="italic">{edu.institution}</span>
											{edu.location?.city && <span>{edu.location.city}</span>}
											{edu.location?.country && <span>{edu.location.country}</span>}
										</div>

										<div class="description">
											<Fragment set:html={documentToHtmlString(edu.description)} />
										</div>
									</div>
								</div>
							);
						})
					}
				</div>
				<div class="section">
					<div class="title"><h3>Language Skills</h3></div>
					{
						CONTENT.languages.map((item: Language) => {
							return (
								<div class="block">
									<div class="date">{item.name}</div>
									<div class="information">
										<div class="title">
											<span class="font-bold">{item.fluency}</span>
										</div>
									</div>
								</div>
							);
						})
					}
				</div>
				<div class="section">
					<div class="title"><h3>IT Skills</h3></div>
					{
						skillList.map(([label, item]) => {
							return (
								<div class="block">
									<div class="date">{label}</div>
									<div class="information">
										<div class="title">
											{item.map((skill) => (
												<span>{skill.name}</span>
											))}
										</div>
									</div>
								</div>
							);
						})
					}
				</div>
				<div class="section">
					<div class="title"><h3>Projects</h3></div>
					{
						CONTENT.projects.map((item: Project) => {
							return (
								<div class="block">
									<div class="date">
										{item.start && `${item.start} –`} {item.end}
									</div>
									<div class="information">
										<div class="title">
											<span class="font-bold">{item.title}</span>
											<span class="italic">{item.team}</span>
										</div>

										<div class="description columns-2">
											<Fragment set:html={documentToHtmlString(item.description)} />
										</div>
									</div>
								</div>
							);
						})
					}
				</div>
				<div class="section">
					<div class="title"><h3>Interests</h3></div>
					<div class="block">
						<div class="date"></div>
						<div class="information">
							<div class="title">
								{
									CONTENT.interests.map((item: Interests) => {
										return <span>{item.name}</span>;
									})
								}
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</body>
</html>
